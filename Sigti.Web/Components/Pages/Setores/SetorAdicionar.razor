@using Sigti.Application
@using Sigti.Application.DTO
@using Sigti.Application.Interfaces
@using Sigti.Application.Base
@inject ISnackbar Snackbar
@inject ICommandHandler<AdicionarSetorCommand> Handler
@inject ILocalizacaoQueryHandler Query
<MudDialog TitleClass="titleclass">
    <TitleContent>
        <MudText Typo="Typo.h6">

            Adicionar Novo
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm @ref=form Model=Setor OnValidSubmit="Salvar">
            <DataAnnotationsValidator />

            <MudTextField @bind-Value="@Setor.Nome"  Label="Nome" For="@(() => Setor.Nome)" />
            <MudSelect  Label="Localização" Text="" @bind-Value="@Setor.LocalizacaoId" >
                @foreach (var item in Localizacao)
                {
                    <MudSelectItem  Value=@item.Id>@item.Nome</MudSelectItem>

                }
            </MudSelect>
            <MudTextField @bind-Value="@Setor.Descricao"  Label="Descrição" Lines="2" />
           
      
        </EditForm>

    </DialogContent>
    <DialogActions>
        <MudButton   Color="Color.Tertiary" OnClick="Salvar">Gravar</MudButton>
        <MudButton  OnClick="Cancel">Cancelar</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    EditForm form;
  

    [Parameter] public AdicionarSetorCommand Setor { get; set; } = new();
    public List<LocalizacaoDTO> Localizacao { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Localizacao = (await Query.ListaLocalizacoes()).ToList();
    }
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Salvar()
    {
        if (form.EditContext.Validate())
        {
            Setor.ModificadoPor = "SYSTEM";
            GenericCommandResult r = (GenericCommandResult)await Handler.Execute(Setor);
            //In a real world scenario this bool would probably be a service to delete the item from api/database
            if (r.Success)
            {
                Snackbar.Add("Setor adicionada!", Severity.Success);
                MudDialog.Close(DialogResult.Ok(""));
            }
            else
            {
                string notes = "\n\n";
                foreach (var item in r.Data)
                {
                    notes += item.Message + "\n";
                }

                Snackbar.Add(r.Message + notes, Severity.Error);
                MudDialog.Close(DialogResult.Ok(""));
            }

        }
      
    }
  
}